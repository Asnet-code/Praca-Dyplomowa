datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// generator client {
//   provider        = "prisma-client-js"

// }


//command npm install prisma-erd-generator
generator erd {
  provider = "prisma-erd-generator"
}



model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role @default(USER)
    acceptsPrivacyPolicy Boolean   @default(false)

  orders        Order[]
}

model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  description String?
  price Float
  brand String?
  category String
  inStock Boolean
  procesor String?
  plyta_glowna String?
  pamiec_ram String?
  karta_graficzna String?
  dysk_ssd String?
  dysk_hdd String?
  obudowa String?
  zasilacz String?
  wyswietlacz String?
  napend String?

  images Image[]
}



model Order{
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  amount Float
  currency String
  status String
  deliveryStatus String?
  createDate DateTime @default(now())
  paymentIntentId String @unique
  products CartProductType[]
  address Address?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

type CartProductType{
  id String
  name String
  description String
  category String
  brand String
  selectedImg Image
  quantity Int
  price Float
  procesor String?
  plyta_glowna String?
  pamiec_ram String?
  karta_graficzna String?
  dysk_ssd String?
  dysk_hdd String?
  obudowa String?
  zasilacz String?
  wyswietlacz String?
  napend String?
}

type Image{
  color String
  colorCode String
  image String
}

type Address{
  city String
  country String
  line1 String
  line2 String?
  postal_code String
  state String
} 

enum Role{
    USER
    ADMIN
}